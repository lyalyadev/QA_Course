import {expect, test} from "@playwright/test";

/*
–î–ó ‚Ññ7
1Ô∏è –ü–∞—Ä–Ω–µ —á–∏ –Ω–µ–ø–∞—Ä–Ω–µ —á–∏—Å–ª–æ
–ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫–∞ –≤–∏–∑–Ω–∞—á–∞—î, —á–∏ —á–∏—Å–ª–æ –ø–∞—Ä–Ω–µ –∞–±–æ –Ω–µ–ø–∞—Ä–Ω–µ.
    –í—Ö—ñ–¥: –ß–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 4)
–í–∏—Ö—ñ–¥:
    "–ß–∏—Å–ª–æ –ø–∞—Ä–Ω–µ."
"–ß–∏—Å–ª–æ –Ω–µ–ø–∞—Ä–Ω–µ."*/

function evenOrOddNumbers(value: number){
    if ( value%2 === 0) {
        console.log("–ß–∏—Å–ª–æ –ø–∞—Ä–Ω–µ.");
        return true
    }
    else if (value%2 != 0 ) {
        console.log("–ß–∏—Å–ª–æ –Ω–µ–ø–∞—Ä–Ω–µ.");
        return false
    } else {
        throw Error('Make sure if you put a number')
    }
};

test('u1 number is even', ()=>{
    const even = evenOrOddNumbers(8);
    expect(even).toBeTruthy();
});

test('u2 number is not even', ()=>{
    const even = evenOrOddNumbers(7);
    expect(even).toBeFalsy();
});

test('u3 0 should throw error message', () => {
    let exception = "";
    try {
        evenOrOddNumbers(0)
    } catch (error) {
        exception = error.message;
    }
    expect(exception).toMatch('Make sure if you put a number')
});

/*
2Ô∏è –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –∑–∞ —á–∞—Å–æ–º
 –ó–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —á–∞—Å—É –¥–æ–±–∏, –≤–∏–≤–µ–¥—ñ—Ç—å –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è: "–î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É!", "–î–æ–±—Ä–æ–≥–æ –¥–Ω—è!" –∞–±–æ "–î–æ–±—Ä–æ–≥–æ –≤–µ—á–æ—Ä–∞!".
    –í—Ö—ñ–¥: –ì–æ–¥–∏–Ω–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 15)
–í–∏—Ö—ñ–¥:
    –Ø–∫—â–æ –≥–æ–¥ < 12: "–î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É!"
–Ø–∫—â–æ –≥–æ–¥ 12‚Äì18: "–î–æ–±—Ä–æ–≥–æ –¥–Ω—è!"
–Ø–∫—â–æ –≥–æ–¥ > 18: "–î–æ–±—Ä–æ–≥–æ –≤–µ—á–æ—Ä–∞!"*/


function greetings(hour: number) {
    if (hour  >= 0 &&  hour < 12) {
        return 'Good morning!'
    } else if (hour > 18 && hour <= 24) {
        return 'Good night!'
    } else if (hour >=12 || hour <= 18) {
        return 'Good evening!'
    } else {
        throw Error("Please, make sure that you put hours between 0 and 24")
    }
};

test('u4 show good morning min value', () => {
    const result = greetings(0);
    expect(result).toBeTruthy()
});

test('u5 show goog morning max value', () => {
    const result = greetings(11);
    expect(result).toBeTruthy()
});

test('u6 show good evening max value', () => {
    const result = greetings(12);
    expect(result).toBeTruthy()
});

test('u7 show good evening min value', () => {
    const result = greetings(18);
    expect(result).toBeTruthy()
});

test('u8 show good night max value', () =>{
    const result = greetings(24);
    expect(result).toBeTruthy()
});

test('u9 show good night min value', () => {
    const result = greetings(19);
    expect(result).toBeTruthy()
});

test('u10 show error if number mote then 24', () => {
    let exception = "";
    try {
        greetings(25)
    } catch (error) {
        exception = error.message;
    }
    expect(exception).toMatch("Please, make sure that you put hours between 0 and 24");
});


/*–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ—Ü—ñ–Ω–∫–∏
üìö –Ø–∫—â–æ –±–∞–ª >= 50 ‚Äî "–¢–µ—Å—Ç —Å–∫–ª–∞–¥–µ–Ω–æ". –Ø–∫—â–æ < 50 ‚Äî "–¢–µ—Å—Ç –Ω–µ —Å–∫–ª–∞–¥–µ–Ω–æ".*/

function notes (note: number) {
    if (note >= 50) {
        console.log("You have passed");
        return true
    }
    else {
        console.log("You are down");
        return false
    }
};
notes(45);


/*4Ô∏è –í—ñ–∫ –¥–ª—è –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è
 –ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –º–æ–∂–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –≥–æ–ª–æ—Å—É–≤–∞—Ç–∏.
    –í—Ö—ñ–¥: –í—ñ–∫ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 17)
–í–∏—Ö—ñ–¥:
    –Ø–∫—â–æ >= 18: "–í–∏ –º–æ–∂–µ—Ç–µ –≥–æ–ª–æ—Å—É–≤–∞—Ç–∏."
–Ü–Ω–∞–∫—à–µ: "–í–∏ —â–µ –Ω–µ –º–æ–∂–µ—Ç–µ –≥–æ–ª–æ—Å—É–≤–∞—Ç–∏."*/

function voteApp (voteAge: number) {
    if(voteAge >= 18) {
        console.log("You may vote")
            return true
    } else {
        console.log("You are not allowed to vote")
        return false
    }
};
voteApp(15);


/*5Ô∏è –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —á–∏—Å–µ–ª
‚öñÔ∏è –ü–æ—Ä—ñ–≤–Ω—è–π—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞: –≤–∏–≤–µ–¥—ñ—Ç—å –±—ñ–ª—å—à–µ, –∞–±–æ –ø–æ–≤—ñ–¥–æ–º—Ç–µ, —â–æ —á–∏—Å–ª–∞ —Ä—ñ–≤–Ω—ñ.
    –í—Ö—ñ–¥: –î–≤–∞ —á–∏—Å–ª–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 8 —ñ 10)
–í–∏—Ö—ñ–¥:
    "–ü–µ—Ä—à–µ —á–∏—Å–ª–æ –±—ñ–ª—å—à–µ."
"–î—Ä—É–≥–µ —á–∏—Å–ª–æ –±—ñ–ª—å—à–µ."
"–ß–∏—Å–ª–∞ —Ä—ñ–≤–Ω—ñ."*/

function numberComparison (a: number, b: number) {
    if (a > b) {
        console.log("–ü–µ—Ä—à–µ —á–∏—Å–ª–æ –±—ñ–ª—å—à–µ.")
    } if (a < b) {
        console.log("–î—Ä—É–≥–µ —á–∏—Å–ª–æ –±—ñ–ª—å—à–µ.")
    } else {
        console.log("–ß–∏—Å–ª–∞ —Ä—ñ–≤–Ω—ñ.")
    }
};
numberComparison(3, 5);

/*6Ô∏è –î–æ—Ä–æ–≥–∞ —ñ —Å–≤—ñ—Ç–ª–æ—Ñ–æ—Ä
–Ø–∫—â–æ –∑–µ–ª–µ–Ω–∏–π ‚Äî –ø–µ—Ä–µ—Ö–æ–¥—å—Ç–µ. –ñ–æ–≤—Ç–∏–π ‚Äî –ø—ñ–¥–≥–æ—Ç—É–π—Ç–µ—Å—è. –ß–µ—Ä–≤–æ–Ω–∏–π ‚Äî –∑–∞—á–µ–∫–∞–π—Ç–µ.*/


function pedestrianRules (light: string){
    if (light = "green") {
    return "Go"
    } else if (light = "yellow") {
        return "Wait"
    } else if (light = "red") {
        return "Stop"
    } else {
        throw Error("")
    }
}



/*
7Ô∏è –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É —á–∏—Å–ª–∞
–ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫–∞ –≤–∏–∑–Ω–∞—á–∞—î, —á–∏ —á–∏—Å–ª–æ –¥–æ–¥–∞—Ç–Ω—î, –≤—ñ–¥‚Äô—î–º–Ω–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é.
–í—Ö—ñ–¥: –ß–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, -5)
–í–∏—Ö—ñ–¥:
"–ß–∏—Å–ª–æ –¥–æ–¥–∞—Ç–Ω—î."
"–ß–∏—Å–ª–æ –≤—ñ–¥‚Äô—î–º–Ω–µ."
"–ß–∏—Å–ª–æ –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é." */

function numberState(number: number){

};




/*
–î–ó ‚Ññ7
1Ô∏è –ü–∞—Ä–Ω–µ —á–∏ –Ω–µ–ø–∞—Ä–Ω–µ —á–∏—Å–ª–æ
–ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫–∞ –≤–∏–∑–Ω–∞—á–∞—î, —á–∏ —á–∏—Å–ª–æ –ø–∞—Ä–Ω–µ –∞–±–æ –Ω–µ–ø–∞—Ä–Ω–µ.
    –í—Ö—ñ–¥: –ß–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 4)
–í–∏—Ö—ñ–¥:
    "–ß–∏—Å–ª–æ –ø–∞—Ä–Ω–µ."
"–ß–∏—Å–ª–æ –Ω–µ–ø–∞—Ä–Ω–µ."*/














